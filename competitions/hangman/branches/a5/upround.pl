#!/usr/bin/perl

use strict;
use warnings;

use YAML qw/ LoadFile DumpFile /;

(my $sourcefile = $ARGV[0]) =~ s/(.)(\d+)/$1@{[$2-1]}/;
my $previousRound = $2 - 1;
my $yaml = LoadFile( "../$previousRound/$sourcefile.yaml" );

my @range = @{$yaml->{range}};
my $NewRound;

for my $assistant ( @{$yaml->{assistant}} )
{
	push @{$NewRound->{assistant}}, $yaml->{names}->
					{3 + ($yaml->{id}->{$assistant} ) };
}

# need tables hash with index values as well as names
# will call them tablesWithIndexes

for my $table ( keys  %{$yaml->{tables}} )
{
	my @players;
	my @playersAsIndexes;
	for my $name ( @{$yaml->{tables}->{$table}->{players}} ) 
	{
		warn "$name not defined" 
				unless ( defined $yaml->{index}->{$name} );
		push @players, 
			$yaml->{names}->{plusone ($yaml->{index}->{$name})};
		push @playersAsIndexes, 
			plusone ($yaml->{index}->{$name});
	}
	$NewRound->{tables}->{$table}->{players} = \@players;
	$NewRound->{tablesWithIndexes}->{$table}->{players} = \@playersAsIndexes;
}

$NewRound->{round} = $yaml->{round} + 1;
$NewRound->{range} = $yaml->{range};
$NewRound->{names} = $yaml->{names};
$NewRound->{index} = $yaml->{index};
$NewRound->{id} = $yaml->{id};
$NewRound->{Warning} = "# This file, " . substr($ARGV[0], 0, 1) . $NewRound->{round} . ".yaml was autogenerated on " . localtime() . " by upround.pl";

DumpFile( substr( $ARGV[0], 0, 1 ) . $NewRound->{round}. ".yaml", $NewRound );

sub plusone 
{
	my $index = $_[0];
	return $index if ( $index == 88 );
	$index++;
	$index = $index%($range[1] + 1);
	$index = $range[0] if ( $index == 0 );
	return $index;
}

