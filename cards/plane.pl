#!/usr/bin/perl

# Last Edit: 2022 Jun 20,  3:55:44 PM
# $Id: /dic/branches/ctest/dic.pl 1263 2007-06-23T12:37:20.810966Z greg  $

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use List::Util qw/sample shuffle/;
use YAML qw/LoadFile DumpFile/;
use Text::Template;


my $man = 0;
my $help = 0;
my $n = 8;
my $t = 1;
my $s = '';
my $f = 0;
my $topic = '';
my $nine = '';
my $sixteen = '';
my $pair = '';
my ($fl, $fm, $fr, $ml, $mm, $mr, $bl, $bm, $br) = ('') x 9;

GetOptions (
	'help|?' => \$help, man => \$man,
	't=i' => \$t, 'n=i' => \$n, 's=s' => \$s, 'f=i' => \$f
	, 'topic=s' => \$topic, 'nine' => \$nine
	, 'sixteen' => \$sixteen, 'pair' => \$pair
	, 'bl:s' => \$bl, 'bm:s' => \$bm, 'br:s' => \$br
	, 'ml:s' => \$ml, 'mm:s' => \$mm, 'mr:s' => \$mr
	, 'fl:s' => \$fl, 'fm:s' => \$fm, 'fr:s' => \$fr
) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

my %corner = ( 
	'bl' => $bl, 'bm' => $bm, 'br' => $br
	, 'ml' => $ml, 'mm' => $mm, 'mr' => $mr
	, 'fl' => $fl, 'fm' => $fm, 'fr' => $fr
);
my %romanize = (
	0 => "Zero", 1 => "One", 2 => "Two", 3 =>"Three"
	, 4 => "Four", 5 => "Five", 6 => "Six", 7 =>"Seven"
	, 8 => "Eight", 9 => "Nine", 10 => "Ten", 11 =>"Eleven" 
);

my $latex;
my $cards = LoadFile "$topic/cards.yaml";

my $story = $cards->{$s};
die "No $s story" unless ref $story eq 'HASH';
my $identifier = "$s $f";
$identifier =~ s/_/ /;
$latex->{identifier} = $identifier;
my $flashcard;
if (exists $story->{match} && exists $story->{match}->{$f} ) {
        $flashcard = $story->{match}->{$f};
}
elsif (exists $story->{flash} && exists $story->{flash}->{$f} ) {
	$flashcard = $story->{flash}->{$f};
}
else { die "No match/flash $s story, form $f cards\n" }

my %pic;
if ( ref $flashcard eq 'HASH' and exists $flashcard->{pair} ) {
	my $pair = $flashcard->{pair};
	$pic{$pair->[$_]->[1]} = $pair->[$_]->[0] for (0..$#$pair);
}
elsif ( ref $flashcard eq 'HASH' ) {
		$pic{$flashcard->{$_}} = $_ for keys %$flashcard;
}
else { die "$s story. form $f format is match or flash?\n" }

my %unpicked = %corner;
for my $pick ( keys %corner ) {
	if ( $corner{$pick} ) {
		$latex->{$pick} = $corner{$pick};
		delete $unpicked{$pick};
		delete $pic{$corner{$pick}};
		$n--;
	}
}

my @pic = keys %pic;
if ( keys %pic > $n ) {
	my @sample = sample( $n, values(%pic) );
	@pic = @sample;
}
if ( keys %pic < $n ) {
	my @extra = sample( ($n-keys %pic), @pic );
	@pic = (@pic, @extra);
}

die "unpicked=@{[keys %unpicked]}, pic=@pic\n" unless
	(keys %unpicked) == @pic;
@$latex{keys %unpicked} = shuffle @pic;

$latex->{cardIdentifier} = "$identifier";
$latex->{story} = $s;
$latex->{form} = $romanize{ $f };
$latex->{autogen} = "% This file, plane_${s}_$f.tex was
autogenerated on " . localtime() . "by plane.pl out of plane.tmpl";
$latex->{graphicx} = "$ENV{HOME}/curriculum/topics/$topic/pic";

my $template = Text::Template->new(TYPE => 'FILE',
	SOURCE => "$ENV{HOME}/ttb/cards/plane.tmpl",
	DELIMITERS => [ '«', '»' ] );
open TEX, "> $ENV{HOME}/curriculum/topics/$topic/plane_${s}_$f.tex";
print TEX $template->fill_in( HASH => $latex );


__END__

=head1 NAME

flashcard.pl - Create flashcard cards from list in cards.yaml

=head1 SYNOPSIS

perl ttb/cards/flashcard.pl -t 3 -n 4 -s cell_phones -f 0 topics/phones

=head1 DESCRIPTION

Makes n cards from fth flashcard sequence in cell_phones mapping in topics/phones/cards.yaml. If n is less than the number of words in the sequence, make a random sample of them. If n is greater, add sampled extra words.

If the optional -t (team) option exists, create t different randomly-selected sets of cards.

nine option (--nine) makes 3 x 3 cards on each page, landscape-wise.

The sixteen option (--sixteen) arranges 2 x 8 cards on one page for convenient cutting for slow feeding. See http://drbean.sdf.org/SlowFeedCards.html 

=cut
